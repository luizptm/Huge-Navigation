
** JSDoc
An API documentation generator for JavaScript.
https://github.com/jsdoc3/jsdoc

** Grunt
In one word: automation. The less work you have to do when performing repetitive tasks like minification, compilation, unit testing, linting, etc, the easier your job becomes. After you've configured it through a Gruntfile, a task runner can do most of that mundane work for you—and your team—with basically zero effort.
https://github.com/gruntjs/
https://gruntjs.com/

** Mocha
Mocha is a feature-rich JavaScript test framework running on Node.js and in the browser, making asynchronous testing simple and fun. Mocha tests run serially, allowing for flexible and accurate reporting, while mapping uncaught exceptions to the correct test cases. Hosted on GitHub.
https://github.com/mochajs/mocha
https://mochajs.org/

** Sinon
Standalone test spies, stubs and mocks for JavaScript. 
Works with any unit testing framework.
https://github.com/sinonjs/sinon
http://sinonjs.org/#get-started

** Jasmine
Jasmine is a behavior-driven development framework for testing JavaScript code. It does not depend on any other JavaScript frameworks. It does not require a DOM. And it has a clean, obvious syntax so that you can easily write tests.
https://github.com/jasmine/jasmine
https://jasmine.github.io/

** Chai
Chai is a BDD / TDD assertion library for node and the browser that can be delightfully paired with any javascript testing framework.
https://github.com/chaijs/chai
http://chaijs.com/

** Karma
On the AngularJS team, we rely on testing and we always seek better tools to make our life easier. That's why we created
Karma - a test runner that fits all our needs.
https://github.com/karma-runner/karma
http://karma-runner.github.io/1.0/index.html

- No global pollution
- Easy to use
- Require minimal “integration”
- Easy to embed seamlessly with any testing framework
- Easily fake any interface
- Ship with ready-to-use fakes for XMLHttpRequest, timers and more

** Morgan
HTTP request logger middleware for node.js
https://github.com/expressjs/morgan

** Express
Fast, unopinionated, minimalist web framework for Node.js
https://github.com/expressjs/express

** Phantonjs
PhantomJS is a headless WebKit scriptable with a JavaScript API. It has fast and native support for various web standards: DOM handling, CSS selector, JSON, Canvas, and SVG.
https://github.com/ariya/phantomjs

**********************
>> padding: 25px 50px 75px 100px;
top padding is 25px
right padding is 50px
bottom padding is 75px
left padding is 100px

>> margin: 25px 50px 75px 100px;
top margin is 25px
right margin is 50px
bottom margin is 75px
left margin is 100px

>> border-style: dotted solid double dashed;
top border is dotted
right border is solid
bottom border is double
left border is dashed

>> overflow
visible - Default. The overflow is not clipped. It renders outside the element's box
hidden - The overflow is clipped, and the rest of the content will be invisible
scroll - The overflow is clipped, but a scrollbar is added to see the rest of the content
auto - If overflow is clipped, a scrollbar should be added to see the rest of the content

>> float
In its simplest use, the float property can be used to wrap text around images.
*clear - Specifies on which sides of an element where floating elements are not allowed to float
*float - Specifies whether or not an element should float
*overflow - Specifies what happens if content overflows an element's box
*overflow-x - Specifies what to do with the left/right edges of the content if it overflows the element's content area
*overflow-y - Specifies what to do with the top/bottom edges of the content if it overflows the element's content area

>> clear
The clear property is used to control the behavior of floating elements.
Elements after a floating element will flow around it. To avoid this, use the clear property.
The clear property specifies on which sides of an element floating elements are not allowed to float: left or right.

>> left: auto|length|initial|inherit;